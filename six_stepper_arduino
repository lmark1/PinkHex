/*     Simple Stepper Motor Control Exaple Code
 *      
 *  by Dejan Nedelkovski, www.HowToMechatronics.com
 *  
 */
// Stepper motor pins 
const int stepper_1 = 3; 
const int stepper_2 = 4;
const int stepper_3 = 9;
const int stepper_4 = 10;
const int stepper_5 = 11;
const int stepper_6 = 12;

// Direction pin numver
const int dirPin = 2; 

const int enablePin = 5;

const int MS1 = 6;
const int MS2 = 7;
const int MS3 = 8;
 
void setup() {
  
  // Sets the two pins as Outputs
  pinMode(stepper_1,OUTPUT);
  pinMode(stepper_2,OUTPUT);
  pinMode(stepper_3,OUTPUT);
  pinMode(stepper_4,OUTPUT);
  pinMode(stepper_5,OUTPUT);
  pinMode(stepper_6,OUTPUT);
   
  pinMode(dirPin,OUTPUT);
  pinMode(enablePin, OUTPUT);
  pinMode(MS1, OUTPUT);
  pinMode(MS2, OUTPUT);
  pinMode(MS3, OUTPUT);

  // Enable motor
  digitalWrite(enablePin, LOW);

  // Speed - quarter step
  // MS1 - L, MS2 - H, MS3 - L
  digitalWrite(MS1, LOW);
  digitalWrite(MS2, LOW);
  digitalWrite(MS3, LOW);
}

void loop() {

  int motor_set_1[1] = { stepper_1, stepper_3, stepper_5 };
  int motor_set_2[1] = { stepper_2, stepper_4, stepper_6 };
  
  runBackwardOnce(motor_set_1);
  delay(150);
  
  runBackwardOnce(motor_set_2);
  delay(150);
 
}

/**
 * Run forward selected motors.
 * 
 * @motor_indices[] - int array with motor pin values
 */
void runForwardOnce(int motor_indices[]) {
  
  // Enables the motor to move in a particular direction
  digitalWrite(dirPin,HIGH); 
  
  // Makes 200 pulses for making one full cycle rotation
  for(int x = 0; x < 200; x++) {
    
    enableMotors(motor_indices);
    delayMicroseconds(500); 
    
    disableMotors(motor_indices);
    delayMicroseconds(500); 
  }
}


/**
 * Run backward selected motors.
 * 
 * @motor_indices[] - int array with motor pin values
 */
void runBackwardOnce(int motor_indices[]) {

  //Changes the rotations direction
  digitalWrite(dirPin,LOW); 
  
  // Makes 400 pulses for making two full cycle rotation
  for(int x = 0; x < 200; x++) {
    
    enableMotors(motor_indices);
    delayMicroseconds(500);
    
    disableMotors(motor_indices);
    delayMicroseconds(500);
  }
}

/**
 * Put HIGH values on all given motor indices.
 * 
 * @motor_indices[] - int array with motor pin values
 */
void enableMotors(int motor_indices[]) {
  
  int n = sizeof(motor_indices) / sizeof(motor_indices[0]);
  int i;

  for (i = 0; i < n; i++) {
    digitalWrite(motor_indices[i], HIGH);
  }
}

/**
 * Put LOW values on all given motor indices.
 * 
 * @motor_indices[] - int array with motor pin values
 */
void disableMotors(int motor_indices[]) {
  
  int n = sizeof(motor_indices) / sizeof(motor_indices[0]);
  int i;

  for (i = 0; i < n; i++) {
    digitalWrite(motor_indices[i], LOW);
  }
}
